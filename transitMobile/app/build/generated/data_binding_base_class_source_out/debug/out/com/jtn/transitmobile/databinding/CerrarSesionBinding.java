// Generated by view binder compiler. Do not edit!
package com.jtn.transitmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jtn.transitmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CerrarSesionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAceptarlogout;

  @NonNull
  public final Button btnCancelar;

  @NonNull
  public final ImageView imageCerrarLogout;

  @NonNull
  public final ImageView imageLogout;

  @NonNull
  public final TextView lbllogout;

  @NonNull
  public final TextView lbllogoutDescripcion;

  private CerrarSesionBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAceptarlogout,
      @NonNull Button btnCancelar, @NonNull ImageView imageCerrarLogout,
      @NonNull ImageView imageLogout, @NonNull TextView lbllogout,
      @NonNull TextView lbllogoutDescripcion) {
    this.rootView = rootView;
    this.btnAceptarlogout = btnAceptarlogout;
    this.btnCancelar = btnCancelar;
    this.imageCerrarLogout = imageCerrarLogout;
    this.imageLogout = imageLogout;
    this.lbllogout = lbllogout;
    this.lbllogoutDescripcion = lbllogoutDescripcion;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CerrarSesionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CerrarSesionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cerrar_sesion, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CerrarSesionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_aceptarlogout;
      Button btnAceptarlogout = ViewBindings.findChildViewById(rootView, id);
      if (btnAceptarlogout == null) {
        break missingId;
      }

      id = R.id.btn_cancelar;
      Button btnCancelar = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelar == null) {
        break missingId;
      }

      id = R.id.image_cerrar_logout;
      ImageView imageCerrarLogout = ViewBindings.findChildViewById(rootView, id);
      if (imageCerrarLogout == null) {
        break missingId;
      }

      id = R.id.image_logout;
      ImageView imageLogout = ViewBindings.findChildViewById(rootView, id);
      if (imageLogout == null) {
        break missingId;
      }

      id = R.id.lbllogout;
      TextView lbllogout = ViewBindings.findChildViewById(rootView, id);
      if (lbllogout == null) {
        break missingId;
      }

      id = R.id.lbllogout_descripcion;
      TextView lbllogoutDescripcion = ViewBindings.findChildViewById(rootView, id);
      if (lbllogoutDescripcion == null) {
        break missingId;
      }

      return new CerrarSesionBinding((ConstraintLayout) rootView, btnAceptarlogout, btnCancelar,
          imageCerrarLogout, imageLogout, lbllogout, lbllogoutDescripcion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
