// Generated by view binder compiler. Do not edit!
package com.jtn.transitmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jtn.transitmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ErrorModalParteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAceptarErrorParte;

  @NonNull
  public final ImageView imageCerrarErrorParte;

  @NonNull
  public final ImageView imageViewErrorParte;

  @NonNull
  public final TextView lblErrorDescripcionParte;

  @NonNull
  public final TextView lblErrorParte;

  private ErrorModalParteBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnAceptarErrorParte, @NonNull ImageView imageCerrarErrorParte,
      @NonNull ImageView imageViewErrorParte, @NonNull TextView lblErrorDescripcionParte,
      @NonNull TextView lblErrorParte) {
    this.rootView = rootView;
    this.btnAceptarErrorParte = btnAceptarErrorParte;
    this.imageCerrarErrorParte = imageCerrarErrorParte;
    this.imageViewErrorParte = imageViewErrorParte;
    this.lblErrorDescripcionParte = lblErrorDescripcionParte;
    this.lblErrorParte = lblErrorParte;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ErrorModalParteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ErrorModalParteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.error_modal_parte, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ErrorModalParteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_aceptarErrorParte;
      Button btnAceptarErrorParte = ViewBindings.findChildViewById(rootView, id);
      if (btnAceptarErrorParte == null) {
        break missingId;
      }

      id = R.id.image_cerrarErrorParte;
      ImageView imageCerrarErrorParte = ViewBindings.findChildViewById(rootView, id);
      if (imageCerrarErrorParte == null) {
        break missingId;
      }

      id = R.id.imageViewErrorParte;
      ImageView imageViewErrorParte = ViewBindings.findChildViewById(rootView, id);
      if (imageViewErrorParte == null) {
        break missingId;
      }

      id = R.id.lblError_descripcionParte;
      TextView lblErrorDescripcionParte = ViewBindings.findChildViewById(rootView, id);
      if (lblErrorDescripcionParte == null) {
        break missingId;
      }

      id = R.id.lblErrorParte;
      TextView lblErrorParte = ViewBindings.findChildViewById(rootView, id);
      if (lblErrorParte == null) {
        break missingId;
      }

      return new ErrorModalParteBinding((ConstraintLayout) rootView, btnAceptarErrorParte,
          imageCerrarErrorParte, imageViewErrorParte, lblErrorDescripcionParte, lblErrorParte);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
