// Generated by view binder compiler. Do not edit!
package com.jtn.transitmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jtn.transitmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ProgressBar barraProgresoL;

  @NonNull
  public final Button btnIniciar;

  @NonNull
  public final Button btnMenuRegistro;

  @NonNull
  public final EditText txtContrasena;

  @NonNull
  public final EditText txtCorreo;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull ProgressBar barraProgresoL,
      @NonNull Button btnIniciar, @NonNull Button btnMenuRegistro, @NonNull EditText txtContrasena,
      @NonNull EditText txtCorreo) {
    this.rootView = rootView;
    this.barraProgresoL = barraProgresoL;
    this.btnIniciar = btnIniciar;
    this.btnMenuRegistro = btnMenuRegistro;
    this.txtContrasena = txtContrasena;
    this.txtCorreo = txtCorreo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barra_progresoL;
      ProgressBar barraProgresoL = ViewBindings.findChildViewById(rootView, id);
      if (barraProgresoL == null) {
        break missingId;
      }

      id = R.id.btn_iniciar;
      Button btnIniciar = ViewBindings.findChildViewById(rootView, id);
      if (btnIniciar == null) {
        break missingId;
      }

      id = R.id.btn_menu_registro;
      Button btnMenuRegistro = ViewBindings.findChildViewById(rootView, id);
      if (btnMenuRegistro == null) {
        break missingId;
      }

      id = R.id.txtContrasena;
      EditText txtContrasena = ViewBindings.findChildViewById(rootView, id);
      if (txtContrasena == null) {
        break missingId;
      }

      id = R.id.txtCorreo;
      EditText txtCorreo = ViewBindings.findChildViewById(rootView, id);
      if (txtCorreo == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, barraProgresoL, btnIniciar,
          btnMenuRegistro, txtContrasena, txtCorreo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
