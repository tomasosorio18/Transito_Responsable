// Generated by view binder compiler. Do not edit!
package com.jtn.transitmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jtn.transitmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ExitoModalParteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAceptarParte;

  @NonNull
  public final ImageView imageCerrarParte;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final TextView lblExitoDescripcionParte;

  @NonNull
  public final TextView lblExitoParte;

  private ExitoModalParteBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnAceptarParte, @NonNull ImageView imageCerrarParte,
      @NonNull ImageView imageView3, @NonNull TextView lblExitoDescripcionParte,
      @NonNull TextView lblExitoParte) {
    this.rootView = rootView;
    this.btnAceptarParte = btnAceptarParte;
    this.imageCerrarParte = imageCerrarParte;
    this.imageView3 = imageView3;
    this.lblExitoDescripcionParte = lblExitoDescripcionParte;
    this.lblExitoParte = lblExitoParte;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ExitoModalParteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExitoModalParteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.exito_modal_parte, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExitoModalParteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_aceptarParte;
      Button btnAceptarParte = ViewBindings.findChildViewById(rootView, id);
      if (btnAceptarParte == null) {
        break missingId;
      }

      id = R.id.image_cerrarParte;
      ImageView imageCerrarParte = ViewBindings.findChildViewById(rootView, id);
      if (imageCerrarParte == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.lblExito_descripcionParte;
      TextView lblExitoDescripcionParte = ViewBindings.findChildViewById(rootView, id);
      if (lblExitoDescripcionParte == null) {
        break missingId;
      }

      id = R.id.lblExitoParte;
      TextView lblExitoParte = ViewBindings.findChildViewById(rootView, id);
      if (lblExitoParte == null) {
        break missingId;
      }

      return new ExitoModalParteBinding((ConstraintLayout) rootView, btnAceptarParte,
          imageCerrarParte, imageView3, lblExitoDescripcionParte, lblExitoParte);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
