// Generated by view binder compiler. Do not edit!
package com.jtn.transitmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.jtn.transitmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final TextView lblApellidoU;

  @NonNull
  public final TextView lblCorreoU;

  @NonNull
  public final TextView lblNombreU;

  private ActivityHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull TextView lblApellidoU,
      @NonNull TextView lblCorreoU, @NonNull TextView lblNombreU) {
    this.rootView = rootView;
    this.bottomNavigationView = bottomNavigationView;
    this.lblApellidoU = lblApellidoU;
    this.lblCorreoU = lblCorreoU;
    this.lblNombreU = lblNombreU;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.lblApellidoU;
      TextView lblApellidoU = ViewBindings.findChildViewById(rootView, id);
      if (lblApellidoU == null) {
        break missingId;
      }

      id = R.id.lblCorreoU;
      TextView lblCorreoU = ViewBindings.findChildViewById(rootView, id);
      if (lblCorreoU == null) {
        break missingId;
      }

      id = R.id.lblNombreU;
      TextView lblNombreU = ViewBindings.findChildViewById(rootView, id);
      if (lblNombreU == null) {
        break missingId;
      }

      return new ActivityHomeBinding((ConstraintLayout) rootView, bottomNavigationView,
          lblApellidoU, lblCorreoU, lblNombreU);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
